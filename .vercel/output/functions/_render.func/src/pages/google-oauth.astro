---
import Layout from "../layouts/Layout.astro";
import Group from "../components/Group.astro";
import Button from "../components/Button.astro";
import Field from "../components/Field.astro";

let localError: string | undefined = undefined;
if (Astro.request.method != "POST") {
	return Astro.request.redirect("/login");
}
const formdata = await Astro.request.formData();
const credential = formdata.get("credential");
const g_csrf_token = formdata.get("g_csrf_token");
const username = formdata.get("username");
const password = formdata.get("password");
try {
	console.log(credential, g_csrf_token);
	const resp = await fetch(
		import.meta.env.BACKEND_URL + "/auth/google-callback",
		{
			method: "POST",
			headers: {
				"Content-Type": "application/json",
				Cookie: "g_csrf_token=" + g_csrf_token,
			},
			body: JSON.stringify({
				credential,
				g_csrf_token,
				username,
				password
			}),
		},
	);
	if (resp.ok) {
		const jwt = resp.headers.get("Authorization");
		if (jwt) {
			Astro.cookies.set("session_jwt", jwt);
			return Astro.redirect("/profile");
		}
	} else {
		const err = await resp.json();
		console.log(err);
		if (err.error != "Linked account not found. Create one.") {
			localError = err.error;
		}
	}
} catch (err) {
	if (err && typeof err == "string") {
		localError = err;
	} else if (
		err &&
		typeof err == "object" &&
		!Array.isArray(err) &&
		"message" in err &&
		typeof err.message == "string"
	) {
		localError = err.message;
	} else {
		localError = "Uknown Error Occured.";
	}
}
---

<Layout
	title="AuthSys | Google Signup"
	useCaptcha={false}
	heading="AuthSys"
	localError={localError}
>
	<form method="POST">
		<Field
			id="usernameField"
			type="text"
			name="username"
			placeholder="Username"
			autocomplete="username"
			required={true}
			minlength={3}
		/>
		<Field
			id="passwordField"
			type="password"
			name="password"
			placeholder="Password"
			autocomplete="new-password"
			required={true}
			patternErrors={{
				"(.{8})": "Password must be atleast 8 characters.",
				"([A-Z])":
					"Password must contain atleast one Uppercase Letter.",
				"([a-z])":
					"Password must contain atleast one Lowercase Letter.",
				"([0-9])": "Password must contain atleast one digit.",
				"([^A-Za-z0-9])":
					"Password must contain atleast one special character.",
			}}
		/>
		<Field
			id="credential"
			type="hidden"
			name="credential"
			placeholder=""
			value={credential ? credential.toString() : ""}
		/>
		<Field
			id="g_csrf_token"
			type="hidden"
			name="g_csrf_token"
			placeholder=""
			value={g_csrf_token ? g_csrf_token.toString() : ""}
		/>
		<br />
		<Group>
			<Button id="signupButton">Signup</Button>
		</Group>
	</form>
</Layout>
<style>
	form {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 0.5rem;
	}
</style>
