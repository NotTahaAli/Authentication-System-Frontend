---
import Layout from "../layouts/Layout.astro";
import Group from "../components/Group.astro";
import Button from "../components/Button.astro";
import Field from "../components/Field.astro";
import { isAuthenticated } from "../functions/isAuthenticated";
import NotificationLayout from "../layouts/NotificationLayout.astro";

if (isAuthenticated(Astro.cookies)) {
	return Astro.redirect("/profile");
}
if (!Astro.url.searchParams.has("code")) {
	return Astro.redirect("/login");
}
let localError: string | undefined = undefined;
let done: boolean = false;
if (Astro.request.method == "POST") {
	try {
		const formdata = await Astro.request.formData();
		const password = formdata.get("password");
		const code = Astro.url.searchParams.get("code");
		const resp = await fetch(
			import.meta.env.BACKEND_URL +
				"/auth/change-password",
			{
				method: "POST",
				headers: {
					"Content-Type": "application/json",
				},
				body: JSON.stringify({
					password,
					code
				}),
			},
		);
		if (resp.ok) {
			done = true;
		} else {
			const err = await resp.json();
			localError = err.error;
		}
	} catch (err) {
		if (err && typeof err == "string") {
			localError = err;
		} else if (
			err &&
			typeof err == "object" &&
			!Array.isArray(err) &&
			"message" in err &&
			typeof err.message == "string"
		) {
			localError = err.message;
		} else {
			localError = "Uknown Error Occured.";
		}
	}
}
---
{done ?
<NotificationLayout title='AuthSys | Change Password' link='/login' heading='AuthSys' buttonText='Continue' localError={localError}>
		Your Password has been changed, please log in.
	</NotificationLayout>
:
<Layout
	title="AuthSys | Change Password"
	useCaptcha={false}
	heading="AuthSys"
	localError={localError}
>
	<form method="POST">
		<Field
			id="passwordField"
			type="password"
			name="password"
			placeholder="Password"
			autocomplete="new-password"
			required={true}
			patternErrors={{
				"(.{8})": "Password must be atleast 8 characters.",
				"([A-Z])":
					"Password must contain atleast one Uppercase Letter.",
				"([a-z])":
					"Password must contain atleast one Lowercase Letter.",
				"([0-9])": "Password must contain atleast one digit.",
				"([^A-Za-z0-9])":
					"Password must contain atleast one special character.",
			}}
		/>
		<Field
			id="confirmPasswordField"
			type="password"
			name="confirmPassword"
			placeholder="Confirm Password"
			autocomplete="new-password"
			required={true}
		/>
		<Group>
			<Button id="changeButton">Change Password</Button>
		</Group>
	</form>
</Layout>
<style>
	form {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 0.5rem;
	}
</style>
<script is:inline>
	const confirmPasswordField = document.querySelector(
		"#confirmPasswordField",
	);
	const passwordField = document.querySelector("#passwordField");
	if (passwordField && confirmPasswordField) {
		confirmPasswordField.addEventListener("input", () => {
			if (passwordField.value != confirmPasswordField.value) {
				confirmPasswordField.setCustomValidity(
					"Passwords do not match.",
				);
			} else {
				confirmPasswordField.setCustomValidity("");
			}
		});
		passwordField.addEventListener("input", () => {
			if (passwordField.value != confirmPasswordField.value) {
				confirmPasswordField.setCustomValidity(
					"Passwords do not match.",
				);
			} else {
				confirmPasswordField.setCustomValidity("");
			}
		});
	}
</script>
}