---
import Layout from '../layouts/Layout.astro';
import Group from '../components/Group.astro';
import Button from '../components/Button.astro';
import Field from '../components/Field.astro';
import Link from '../components/Link.astro';
import NotificationLayout from '../layouts/NotificationLayout.astro';
import {isAuthenticated} from "../functions/isAuthenticated";

const reCaptchaKey = import.meta.env.RECAPTCHA_CLIENT_KEY
let localError: string | undefined = undefined;
let accountCreated: boolean = false;
if (isAuthenticated(Astro.cookies)) {
	return Astro.redirect("/profile");
}
if (Astro.request.method == "POST") {
	try {

		const formdata = await Astro.request.formData();
		const username = formdata.get("username");
		const password = formdata.get("password");
		const email = formdata.get("email");
		const token = formdata.get("g-recaptcha-response");
		const resp = await fetch(import.meta.env.BACKEND_URL+"/auth/sign-up", {
			method: "POST",
			headers: {
				"Content-Type": "application/json",
				"x-vercel-protection-bypass": import.meta.env.VERCEL_BYPASS_KEY
			},
			body: JSON.stringify({
				username, password, token, email
			})
		})
		if (resp.ok) {
			accountCreated = true;
		} else {
			const err = (await resp.json());
			localError = err.error;
		}
	} catch (err) {
		if (err && typeof(err) == "string") {
			localError = err;
		} else if (err && typeof(err) == 'object' && !Array.isArray(err) 
				   && "message" in err && typeof(err.message) == "string") {
			localError = err.message;
		} else {
			localError = "Uknown Error Occured.";
		}
	}
}
---

{accountCreated ?  
<NotificationLayout title='AuthSys | Signup' link='/login' heading='AuthSys' buttonText='Continue' localError={localError}>
	Signup Successful. Please visit the link in your email to verify your account and then proceed to sign in.
</NotificationLayout>
:
<Layout title="AuthSys | Signup" useCaptcha={true} heading='AuthSys' localError={localError}>
	<form method="POST">
		<Field id="emailField" type="email" name="email" placeholder="Email" autocomplete='email' required={true} patternErrors={{
			"^[\\w-_+\\.]+@([\\w-]+\\.)+[\\w-]{2,63}$": "Email must be a valid email."
		}} />
		<Field id="usernameField" type="text" name="username" placeholder="Username" autocomplete='username' required={true} minlength={3} />
		<Field id="passwordField" type="password" name="password" placeholder="Password" autocomplete='new-password' required={true} patternErrors={{
			"(.{8})":"Password must be atleast 8 characters.",
			"([A-Z])": "Password must contain atleast one Uppercase Letter.",
			"([a-z])": "Password must contain atleast one Lowercase Letter.",
			"([0-9])": "Password must contain atleast one digit.",
			"([^A-Za-z0-9])": "Password must contain atleast one special character."
		}} />
		<div class="g-recaptcha" data-sitekey={reCaptchaKey} data-theme="dark"></div>
		<Group>
			<Button id='signupButton'>Signup</Button>
		</Group>
		<Group>
			<Link href="/login">Go To Login</Link>
		</Group>
	</form>
</Layout>
<style>
	form {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 0.5rem;
	}
</style>
}