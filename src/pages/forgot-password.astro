---
import Layout from '../layouts/Layout.astro';
import Group from '../components/Group.astro';
import Button from '../components/Button.astro';
import Field from '../components/Field.astro';
import Link from '../components/Link.astro';
import Text from '../components/Text.astro';
import { isAuthenticated } from '../functions/isAuthenticated';
import NotificationLayout from '../layouts/NotificationLayout.astro';
const reCaptchaKey = import.meta.env.RECAPTCHA_CLIENT_KEY

if (isAuthenticated(Astro.cookies)) {
	return Astro.redirect("/profile");
}
let localError: string | undefined = undefined;
let done: boolean = false;
if (Astro.request.method == "POST") {
	try {
		const formdata = await Astro.request.formData();
		const email = formdata.get("email");
		const token = formdata.get("g-recaptcha-response");
		const resp = await fetch(import.meta.env.BACKEND_URL + "/auth/reset-password", {
			method: "POST",
			headers: {
				"Content-Type": "application/json",
			},
			body: JSON.stringify({
				email,
				token,
			}),
		});
		if (resp.ok) {
			done = true;
		} else {
			const err = await resp.json();
			localError = err.error;
		}
	} catch (err) {
		if (err && typeof err == "string") {
			localError = err;
		} else if (
			err &&
			typeof err == "object" &&
			!Array.isArray(err) &&
			"message" in err &&
			typeof err.message == "string"
		) {
			localError = err.message;
		} else {
			localError = "Uknown Error Occured.";
		}
	}
}
---
{done ?  
	<NotificationLayout title='AuthSys | Forgot Password' link='/login' heading='AuthSys' buttonText='Continue' localError={localError}>
		Please check your email for a link to reset your password. Note: Email will only be sent if you had an account on that email.
	</NotificationLayout>
	:
<Layout title="AuthSys | Forgot Password" useCaptcha={true} heading='AuthSys' localError={localError}>
	<Text>Please enter the email linked with your account. We will send a link to your email to reset your password.</Text>
	<form method="POST">
		<Field id="emailField" type="email" name="email" placeholder="Email" autocomplete='email' required={true} patternErrors={{
			"^[\\w-_+\\.]+@([\\w-]+\\.)+[\\w-]{2,63}$": "Email must be a valid email."
		}} />
		<div class="g-recaptcha" data-sitekey={reCaptchaKey} data-theme="dark"></div>
		<Group>
			<Button id='forgotPasswordButton'>Send Email</Button>
		</Group>
		<Group>
			<Link href="/login">Go To Login</Link>
		</Group>
	</form>
</Layout>
<style>
	form {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 0.5rem;
	}
</style>
}