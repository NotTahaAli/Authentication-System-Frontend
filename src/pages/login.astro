---
interface Props {}

import Layout from "../layouts/Layout.astro";
import Group from "../components/Group.astro";
import Button from "../components/Button.astro";
import Field from "../components/Field.astro";
import Link from "../components/Link.astro";
import { isAuthenticated } from "../functions/isAuthenticated";

const reCaptchaKey = import.meta.env.RECAPTCHA_CLIENT_KEY;
let localError: string | undefined = undefined;
if (isAuthenticated(Astro.cookies)) {
	return Astro.redirect("/profile");
}
if (Astro.request.method == "POST") {
	try {
		const formdata = await Astro.request.formData();
		const username = formdata.get("username");
		const password = formdata.get("password");
		const token = formdata.get("g-recaptcha-response");
		const resp = await fetch(import.meta.env.BACKEND_URL + "/auth/login", {
			method: "POST",
			headers: {
				"Content-Type": "application/json",
			},
			body: JSON.stringify({
				username,
				password,
				token,
			}),
		});
		if (resp.ok) {
			const jwt = resp.headers.get("Authorization");
			if (jwt) {
				Astro.cookies.set("session_jwt", jwt);
				return Astro.redirect("/profile");
			}
		} else {
			const err = await resp.json();
			if (err.error == "Need 2FA.") {
				const twoFactorCode = resp.headers.get("TwoFactorCode");
				if (twoFactorCode) {
					Astro.cookies.set("twoFactorAuthentication", twoFactorCode);
					return Astro.redirect("/two-factor");
				}
			} else if (err.error == "Email not verified.") {
				return Astro.redirect("/verify-email");
			}
			localError = err.error;
		}
	} catch (err) {
		if (err && typeof err == "string") {
			localError = err;
		} else if (
			err &&
			typeof err == "object" &&
			!Array.isArray(err) &&
			"message" in err &&
			typeof err.message == "string"
		) {
			localError = err.message;
		} else {
			localError = "Uknown Error Occured.";
		}
	}
}
---

<Layout
	title="AuthSys | Login"
	useCaptcha={true}
	heading="AuthSys"
	localError={localError}
>
	<script is:inline src="https://accounts.google.com/gsi/client" async
	></script>
	<form method="POST">
		<Field
			id="usernameField"
			type="text"
			name="username"
			autocomplete="username"
			placeholder="Username"
			required={true}
			minlength={3}
		/>
		<Field
			id="passwordField"
			type="password"
			name="password"
			autocomplete="current-password"
			placeholder="Password"
			required={true}
			patternErrors={{
				"(.{8})": "Password must be atleast 8 characters.",
				"([A-Z])":
					"Password must contain atleast one Uppercase Letter.",
				"([a-z])":
					"Password must contain atleast one Lowercase Letter.",
				"([0-9])": "Password must contain atleast one digit.",
				"([^A-Za-z0-9])":
					"Password must contain atleast one special character.",
			}}
		/>
		<div class="g-recaptcha" data-sitekey={reCaptchaKey} data-theme="dark">
		</div>
		<Group>
			<Button id="loginButton">Login</Button>
		</Group>
		<Group>
			<Link href="/sign-up">Signup</Link>
			<Link href="/forgot-password">Forgot Password</Link>
		</Group>
		OR USE
		<Group mobileDirection="column">
			<div
				id="g_id_onload"
				data-client_id={import.meta.env.OAUTH_CLIENT_ID}
				data-context="signin"
				data-ux_mode="popup"
				data-login_uri={Astro.url.origin + "/google-oauth"}
				data-itp_support="true"
			>
			</div>
			<div
				class="g_id_signin"
				data-type="standard"
				data-shape="rectangular"
				data-theme="outline"
				data-text="signin_with"
				data-size="large"
				data-logo_alignment="left"
			>
			</div>
			<!-- <Button href="#" class="googleSignin">Google</Button> -->
			<Button href="/passkey">Passkey</Button>
		</Group>
	</form>
</Layout>
<style>
	form {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 0.5rem;
	}
</style>
